<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="notMain.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="contextMenuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>114, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="notMain.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEAGACoHAAAFgAAACgAAAAwAAAAYAAAAAEAGAAAAAAAgBwAAAAAAAAAAAAAAAAAAAAA
        AAD///b//vb8/Pf19/T0+vr2///p8vnW4vHG0OvEz+nDzOm+xebNzObRzeXRzOjQy+jQyOnQx+nNxenM
        xunLx+nJyOnJyenJyujJzOnIzOnIzOnIzOnIzOnIzOnIzOjIzOjIzOjIzOjIzOjIyunGxurFxunDxujH
        y+rR1PDe3/b08f/+9///9f/99/3//Pr//vb9/fP///z39/fz9Pnx8/7N0uiOlbJnb5JES3Q1O202PHI5
        PXQ9O2tAOmo/OWw+OG8/N3I9NXU8NHY7NXU7NXM5NnI5NnE5OG83OG83OG82OG83OG83OG82OG82N242
        N241N242N242N241NnA3NngxMnEwMmlAQ3JcYIp3eaO1s9jn4vn58//48/r69fP//vb7+/P39/b7+//w
        7v+qp89VU4oAAF0AAF4BAGIKBmwKBW4GAGwKAW8KAXAKAXEKAXEKAHMJAHQJAHQJAHMJAHMIAXIIAXII
        AXELA3ELBHALBHALBHALBHAKBHAHAW4HAW4HAW4HAW4HAW4GAW0AAGcFBmkICmcABF8AAFcAAE4mJmZ4
        dqnHx+X7/v/0+fb4/fP9/vn3+fzo5/6gnMwqInUAAGUQB3wPCIELBoMKBIYJAYkIAIsFAYsDAYsDAYoD
        AYgEAYcEAYcGAYcFAYcGAYcHAogHAYgHAYgIAoYIA4YIA4QIA4IIA4AIAn0FAXgFAXYaMXwaMXwFAXYF
        AXcEAnUFBXUEBXMDBnIGCXQNDnYAAGoAAFVRVYXGzuTz/v/x//rw9/P3+v+3tdozLH4AAGwQBIgIAI0H
        AZMIA5cHAZUHApYKBJsCAJkBAJgBAZYBApIBA48CA44CBI8CBI8CBI8DA5EDA5IDApIDAo0DAowDAowE
        A4sDAokDAocCAYQoVZhHlaRHlaQoVJcCAYMHBocFBYcEBYcBAYUCAYQGBIMKC30FBW0AAExocZjU4vHu
        ///0/v/Z3/NtbKAAAGQWCo8MBJcBAJcFAZwFBJoBAJIAAZEDBZQAApQAApIAA5EABI4ABYsABokAB4kA
        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
        B8EHCL8JCroLCroMBsIKBcMGCr4DDrUCCbsGBL8RCrUZGZSZoOjY3v55e80AAKwQCckHCsoDDMcECM0I
        BtELB84LC8cJCsgHCM0FC8cICcsMBNMOA9QODMMMErYHB8ULA9MJAMEVH5WyvdvN1v4sLp4ZFa0PCK0V
        DcUNBscMB84HBMsGBscGB8QICMIKCMEJCMEHCcEKCr0MCr0NBsULBcYHCcECDrgCCb4FBMERCrgZGZeZ
        n+jT2v53ec4AALAQC80FCswEDcoEB9AIBdMKBtAKCskJCssHB88FCskHCM4LA9UNAtcODMYMErkLCssO
        BNgAAMZOVavCzvzP2P48Pq8MCK8PDbcQC8UMBcgJBMsIB8oICcUICsIIC8EJC8EJCsIICcQKC8ALCr8M
        BccJBMcFB8IADLkDC8IEA8MPCbkXF5iUmujT2f93eM8AALIQCc4FCc8DDM0DB9IIBdYKBtMKCswJCs0H
        B9IGCs0HCc8KBdYNA9kOCsoNEL4PDtEPB9YAAMNocMLL1f+8wf9HSskAAK8RD70PCsYOCs0LB8wJCMgJ
        CsQJDMIIDMEIDMIIC8QICcYJC8ILCsILBcgIBMkEB8QAC7sECsUEA8YPCbsXF5qTmejS2f92eNEAALQQ
        CtAGCtEDDc8ECNQIBtgLBtULCs4KCtAHCNQFCtAHCdALBtUNA9oOCc8MD8QODtAKBswAALmFjtnDyf2I
        helVV+QAALITEsYNCMgRDNEMCM0JCckJC8YJDMQIDMQIC8YICsgICsoJC8UKCsQLBssIBMwFCMgBDL4D
        C8cFBMgRCb8XGJyTmujR2P92eNMAALcQCtMGC9MEDtIGCNcJBtsLCNcMC9ALCtIICNcGC9MHC9IMCdUP
        BdsPCNQNDcwNDM8ICMQMF7afq/SusutDNsBTU+8AAL0TEc4LBswQCtQLBc4KCM0KCssJC8kJC8oICs0H
        Cc4ICswJC8cMC8cMBc0KBc8FCMkBDMEEC8oFBMsQCcEYGKCUmunQ1/92d9QAALgQCtQGCtUFDtQGCNoJ
        Bt0MCNkMDNILC9QICdkGC9YIDNIMC9MQBtsPCNkODNENDc8ID70kM7Wyv/+fot4RALA8OuMDBsYPC9EN
        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
        JMEdIL0eG8QeF8wfFc4fG8QfIrcfJrQfIMAdGc8bF9MaHscbI7seIcEeHsYeHMgdGsseGsoeG8cdHcEd
        H70eHr4fHMIfGccdGcYWGb4dGscfFMggFbwsKq87RqVyhMOvwPDd5//3+//6+vP+/un/+Pz//fj8/uvs
        /uvm//ra8f++yvSkp/GLiu9+f+95f+93f+99g+5+gO9+fPB/e/GAf+9/hu16hex5f+53ePF2dfJ0fPB0
        g+14gu55f+95fO94e+94e+95fe99g+59hO19hO1/gu5/f+99fu98f/CAfPGBdvGFfu+doO21xO3L5Pjm
        /f/p+fz3/fj//+f//+EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>